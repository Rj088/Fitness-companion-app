Rajs-Laptop-110:FitnessCompanion rajjadhav$ lsof -i :5000
COMMAND    PID      USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
ControlCe 1048 rajjadhav   10u  IPv4 0x42e24b1a50120409      0t0  TCP *:commplex-main (LISTEN)
ControlCe 1048 rajjadhav   11u  IPv6 0x4f27431b93f8b6c1      0t0  TCP *:commplex-main (LISTEN)
Rajs-Laptop-110:FitnessCompanion rajjadhav$ kill -9 1048
Rajs-Laptop-110:FitnessCompanion rajjadhav$ kill -9 1048
bash: kill: (1048) - No such process
Rajs-Laptop-110:FitnessCompanion rajjadhav$ kill -9 1048
bash: kill: (1048) - No such process
Rajs-Laptop-110:FitnessCompanion rajjadhav$ npm run dev

> rest-express@1.0.0 dev
> tsx server/index.ts

node:events:496
      throw er; // Unhandled 'error' event
      ^

Error: listen ENOTSUP: operation not supported on socket 0.0.0.0:5000
    at Server.setupListenHandle [as _listen2] (node:net:1915:21)
    at listenInCluster (node:net:1994:12)
    at node:net:2203:7
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)
Emitted 'error' event on Server instance at:
    at emitErrorNT (node:net:1973:8)
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21) {
  code: 'ENOTSUP',
  errno: -45,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 5000
}

Node.js v22.14.0
Rajs-Laptop-110:FitnessCompanion rajjadhav$ cat server/index.ts
import express, { type Request, Response, NextFunction } from "express";
import { registerRoutes } from "./routes";
import { setupVite, serveStatic, log } from "./vite";

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

app.use((req, res, next) => {
  const start = Date.now();
  const path = req.path;
  let capturedJsonResponse: Record<string, any> | undefined = undefined;

  const originalResJson = res.json;
  res.json = function (bodyJson, ...args) {
    capturedJsonResponse = bodyJson;
    return originalResJson.apply(res, [bodyJson, ...args]);
  };

  res.on("finish", () => {
    const duration = Date.now() - start;
    if (path.startsWith("/api")) {
      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;
      if (capturedJsonResponse) {
        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;
      }

      if (logLine.length > 80) {
        logLine = logLine.slice(0, 79) + "â€¦";
      }

      log(logLine);
    }
  });

  next();
});

(async () => {
  const server = await registerRoutes(app);

  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {
    const status = err.status || err.statusCode || 500;
    const message = err.message || "Internal Server Error";

    res.status(status).json({ message });
    throw err;
  });

  // importantly only setup vite in development and after
  // setting up all the other routes so the catch-all route
  // doesn't interfere with the other routes
  if (app.get("env") === "development") {
    await setupVite(app, server);
  } else {
    serveStatic(app);
  }

  // ALWAYS serve the app on port 5000
  // this serves both the API and the client
  const port = 5000;
  server.listen({
    port,
    host: "0.0.0.0",
    reusePort: true,
  }, () => {
    log(`serving on port ${port}`);
  });
})();
Rajs-Laptop-110:FitnessCompanion rajjadhav$ 
 *  History restored 


The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
Rajs-Laptop-110:FitnessCompanion rajjadhav$ npm run dev

> rest-express@1.0.0 dev
> tsx server/index.ts

node:events:496
      throw er; // Unhandled 'error' event
      ^

Error: listen ENOTSUP: operation not supported on socket 0.0.0.0:3000
    at Server.setupListenHandle [as _listen2] (node:net:1915:21)
    at listenInCluster (node:net:1994:12)
    at node:net:2203:7
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)
Emitted 'error' event on Server instance at:
    at emitErrorNT (node:net:1973:8)
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21) {
  code: 'ENOTSUP',
  errno: -45,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 3000
}

Node.js v22.14.0